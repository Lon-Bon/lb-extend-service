apply plugin: 'maven-publish'

Properties localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.getRootDir().getAbsolutePath() + "/local.properties"))

/**
 * 本地仓库url
 */
def MAVEN_LOCAL_PATH = properties.getOrDefault("MAVEN_LOCAL_PATH", "repo")
def mavenRepoLocalUrl = MAVEN_LOCAL_PATH.startsWith("/") ? MAVEN_LOCAL_PATH : "$rootDir/$MAVEN_LOCAL_PATH"

def MAVEN_REPO_TYPE = properties.getOrDefault("MAVEN_REPO_TYPE", "LOCAL")
def MAVEN_REMOTE_URL_RELEASE = properties.getOrDefault("MAVEN_REMOTE_URL_RELEASE", "http://192.168.4.205:8081/repository/maven-releases/")
def MAVEN_REMOTE_URL_SNAPSHOT = properties.getOrDefault("MAVEN_REMOTE_URL_SNAPSHOT", "http://192.168.4.205:8081/repository/maven-snapshots/")
def MAVEN_REMOTE_NAME = localProperties.getOrDefault("MAVEN_REMOTE_NAME", "admin")
def MAVEN_REMOTE_PASSWORD = localProperties.getOrDefault("MAVEN_REMOTE_PASSWORD", "admin123")

println "version->${project.version}"

/**
 * 远程仓库url
 */
def mavenRepoRemoteUrl = project.version.contains("SNAPSHOT") ? MAVEN_REMOTE_URL_SNAPSHOT : MAVEN_REMOTE_URL_RELEASE

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}


task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.hasProperty("kotlin")) {
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        from android.sourceSets.main.java.sourceFiles
    } else {
        from sourceSets.main.allSource
    }
}

group = properties.getOrDefault("PUBLISH_GROUP", "com.lonbon")
version = properties.getOrDefault("PUBLISH_VERSION", "1.0.0")

afterEvaluate {
    publishing {
        repositories {
            maven {
                setUrl(MAVEN_REPO_TYPE == "REMOTE" ? mavenRepoRemoteUrl : mavenRepoLocalUrl)
                if (MAVEN_REPO_TYPE == "REMOTE") {
                    credentials {
                        username = MAVEN_REMOTE_NAME
                        password = MAVEN_REMOTE_PASSWORD
                    }
                }
            }
        }

        publications {
            release(MavenPublication) {
                from components.release
                artifactId = rootProject.name
//                artifact androidJavadocsJar
                artifact androidSourcesJar

            }

        }
    }
}